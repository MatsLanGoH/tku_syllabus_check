# encoding: utf-8

#
# 点検ポイント
#
tenken = ["必須科目をすべて記入してください。",
          "受業計画は開講回数すべてを記載してください。",
          "受業計画は各回の違いが明確になるように記載してください。",
          "受業計画に「試験」「テスト」の表記を使わないでください。",
          "評価方法に出席点に関わる表記を使わないでください。"]


##
# HELPER FUNCTIONS
#
def is_empty(s):
    """
    s : string with description of item
    returns True if string is too short
    else False
    """
    return len(s) > 2


## 
# 点検項目を入れる行列
# 
checks = []


################################################
# Check 1: 必須科目はすべて記入されている
################################################

# (1) 点検内容の説明（指示）
message = "必須科目をすべて記入してください。"


# (2) 点検条件の定義
def all_items_entered(items, sheet):
    error_msg = ""

    for k, v in items.items():
        try:
            cell = sheet.cell_value(*v)
            if is_empty(cell):
                error_msg += '\t({})\n'.format(k)
        except TypeError:
            # print("Ignoring invalid value: {} : {}".format(k, v))
            pass
    return error_msg


# (3) 点検行列に加えておく
checks.append([message, all_items_entered])


################################################
# Check :
################################################

# (1) 点検内容の説明（指示）

# (2) 点検条件の定義

# (3) 点検行列に加えておく


################################################
# Check :
################################################

# (1) 点検内容の説明（指示）

# (2) 点検条件の定義

# (3) 点検行列に加えておく


################################################
# Check :
################################################

# (1) 点検内容の説明（指示）

# (2) 点検条件の定義

# (3) 点検行列に加えておく


################################################
# Check :
################################################

# (1) 点検内容の説明（指示）

# (2) 点検条件の定義

# (3) 点検行列に加えておく


################################################
# Check :
################################################

# (1) 点検内容の説明（指示）

# (2) 点検条件の定義

# (3) 点検行列に加えておく




